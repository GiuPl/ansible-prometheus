---
# file: tasks/install-prometheus.yml
#
# Install Prometheus server.
#
# @see http://prometheus.io/docs/introduction/getting_started/
#

- name: set internal variables for convenience
  set_fact:
    prometheus_subdir: "{{ prometheus_install_path }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}"

- name: set download url
  set_fact:
    prometheus_tarball_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}.tar.gz"

- name: set daemon dir
  set_fact:
    prometheus_daemon_dir: "{{ prometheus_subdir }}"

- name: create prometheus_tarball_path archive in "{{prometheus_tarball_path}}"
  file:
    path: "{{ prometheus_tarball_path }}"
    state: directory
    mode: 0755

- name: download prometheus tarball
  get_url:
    url: "{{ prometheus_tarball_url }}"
    dest: "{{ prometheus_tarball_path }}"
  register: prometheus_compressed_download

- name: set up prometheus_exporter_dir_name variable
  set_fact: 
    prometheus_prometheus_dir_name: "{{ prometheus_compressed_download.dest.split('/')[-1].replace('.tar.gz','') }}"

- name: debug
  debug:
    var: prometheus_prometheus_dir_name

- name: unarchive binary tarball
  unarchive:
    remote_src: yes
    src: "{{ prometheus_tarball_path }}/{{ prometheus_prometheus_dir_name }}.tar.gz"
    dest: "{{ prometheus_install_path }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: set permissions, owner and group
  file:
    path: "{{ prometheus_install_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "go-w"
    recurse: yes

- name: mkdir for config and data
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o="
  with_items:
    - "{{ prometheus_rule_path }}"
    - "{{ prometheus_db_path }}"

- name: copy Systemd script to server
  template: 
    src: "../templates/prometheus.systemd.service.j2"
    dest: "/etc/systemd/system/prometheus.service"
  notify:
    - restart prometheus

- name: set prometheus-server to enable
  service: 
    name: prometheus
    enabled: yes

- name: copy rule files from playbook's if prometheus_rule_files is defined
  copy:
    src: "{{ playbook_dir }}/{{ item.value.src }}"
    dest: "{{ prometheus_rule_path }}/{{ item.value.dest }}"
    validate: "{{ prometheus_daemon_dir }}/promtool check rules %s"
  with_dict: "{{ prometheus_rule_files | default({}) }}"
  notify:
    - reload prometheus

- name: Create ssh config key
  copy:
    content: "{{ prometheus_rule_git_key }}"
    dest: "{{ prometheus_rule_git_key_pathfile_tmp }}"
    mode: 0400
  when: prometheus_rule_git_key is defined

- name: copy rules from git repo if is configured
  git:
    repo: "{{ prometheus_rule_git_repo }}"
    dest: "{{ prometheus_rule_git_path }}"
    version: "{{ prometheus_rule_git_version }}"
    ssh_opts: "-o StrictHostKeyChecking=no"
    key_file: "{{ prometheus_rule_git_key_pathfile }}"
  when: prometheus_rule_git_repo is defined

- name: delete key if create by ansible
  file:
    state: absent
    path: "{{ prometheus_rule_git_key_pathfile_tmp }}"
  when: prometheus_rule_git_key is defined

- name: create tmp copy for manual check
  template:
    src: "../templates/prometheus.yml.j2"
    dest: "/tmp/prometheus.yml"
  when: prometheus_conf_main is not defined and prometheus_donotdeploy_configuration is not defined

- name: copy prometheus default config
  template:
    src: "../templates/prometheus.yml.j2"
    dest: "{{ prometheus_config_path }}/prometheus.yml"
    validate: "{{ prometheus_daemon_dir }}/promtool check-config %s"
  when: prometheus_conf_main is not defined and prometheus_donotdeploy_configuration is not defined
  notify:
    - reload prometheus

- name: copy prometheus main config file from playbook's
  template:
    src: "{{ playbook_dir }}/{{ prometheus_conf_main }}"
    dest: "{{ prometheus_config_path }}/prometheus.yml"
    validate: "{{ prometheus_daemon_dir }}/promtool check config %s"
  when: prometheus_conf_main is defined
  notify:
    - reload prometheus